package com.example.sentimentanalysis.model;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.time.LocalDateTime;

/**
 * Entity class representing feedback data.
 * Maps to the 'feedback' table in the database.
 * 
 * Lombok annotations:
 * - @Data: Generates getters, setters, equals, hashCode, and toString methods
 * - @NoArgsConstructor: Generates a constructor with no parameters
 * - @AllArgsConstructor: Generates a constructor with a parameter for each field
 */
@Entity
@Table(name = "feedback")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Feedback {
    
    /**
     * Unique identifier for the feedback.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    /**
     * The feedback text content.
     * Cannot be null and has a maximum length of 1000 characters.
     */
    @Column(nullable = false, length = 1000)
    private String text;
    
    /**
     * The sentiment label determined by the ML model.
     * Typically "positive", "negative", or "neutral".
     */
    @Column(name = "sentiment_label")
    private String sentimentLabel;
    
    /**
     * Numeric score representing the confidence/intensity of the sentiment.
     * Usually a value between 0 and 1.
     */
    @Column(name = "sentiment_score")
    private Double sentimentScore;
    
    /**
     * Timestamp when the feedback was created.
     */
    @Column(name = "created_at")
    private LocalDateTime createdAt;
    
    /**
     * JPA lifecycle callback that automatically sets the creation timestamp
     * before the entity is persisted to the database.
     */
    @PrePersist
    protected void onCreate() {
        this.createdAt = LocalDateTime.now();
    }
}